set bell-style visible
set comment-begin #
set completion-ignore-case off
set completion-query-items 100
set convert-meta on
set disable-completion off
set editing-mode emacs
set enable-keypad off
set expand-tilde off
set horizontal-scroll-mode off
set input-meta on
set keymap emacs
set mark-directories on
set mark-modified-lines off
set mark-symlinked-directories on
set match-hidden-files on
set output-meta on
set page-completions on
set print-completions-horizontally off
set show-all-if-ambiguous on
set show-all-if-unmodified on
set visible-stats on

# the following line is actually
# equivalent to "\C-?": delete-char
"\e[3~": delete-char

# VT
"\e[1~": beginning-of-line
"\e[4~": end-of-line

# kvt
"\e[H": beginning-of-line
"\e[F": end-of-line

# rxvt and konsole (i.e. the KDE-app...)
"\e[7~": beginning-of-line
"\e[8~": end-of-line

# VT220
"\eOH": beginning-of-line
"\eOF": end-of-line

"\e[A": history-search-backward
"\e[B": history-search-forward

$if mode=emacs
  # Common to Console & RXVT
  "\C-?": backward-kill-line         # Ctrl-BackSpace
  "\e[2~": paste-from-clipboard      # "Ins. Key"
  "\e[5~": beginning-of-history      # Page up
  "\e[6~": end-of-history            # Page down

  $if term=msys # RXVT
    "\e[7~": beginning-of-line      # Home Key
    "\e[8~": end-of-line            # End Key
    "\e[11~": display-shell-version # F1
    "\e[15~": re-read-init-file     # F5
    "\e[12~": "Function Key 2"
    "\e[13~": "Function Key 3"
    "\e[14~": "Function Key 4"
    "\e[17~": "Function Key 6"
    "\e[18~": "Function Key 7"
    "\e[19~": "Function Key 8"
    "\e[20~": "Function Key 9"
    "\e[21~": "Function Key 10"
  $else
  # Eh, normal Console is not really cygwin anymore, is it? Using 'else' instead. -mstormo
  # $if term=cygwin # Console
    "\e[1~": beginning-of-line      # Home Key
    "\e[4~": end-of-line            # End Key
    "\e[3~": delete-char            # Delete Key
    "\e\e[C": forward-word          # Alt-Right
    "\e\e[D": backward-word         # Alt-Left
    "\e[1;5C": forward-word         # ctrl + right
    "\e[1;5D": backward-word        # ctrl + left
    "\e[17~": "Function Key 6"
    "\e[18~": "Function Key 7"
    "\e[19~": "Function Key 8"
    "\e[20~": "Function Key 9"
    "\e[21~": "Function Key 10"
    "\e[23~": "Function Key 11"
  $endif
$endif
